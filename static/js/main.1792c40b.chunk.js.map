{"version":3,"sources":["components/Header.js","components/Error.js","components/Form.js","components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","styled","nav","Header","title","href","ErrorComponent","p","Error","messagge","Form","search","saveSearch","updateConsult","useState","error","saveError","city","country","handleChange","e","target","name","value","onSubmit","preventDefault","trim","className","htmlFor","id","placeholder","onChange","type","WeatherContainer","div","Weather","result","cod","main","kelvin","parseFloat","temp","toFixed","temp_max","temp_min","App","consult","saveResult","useEffect","a","url","fetch","response","json","consultAPI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1792c40b.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst Nav = styled.nav` \n    display: flex;\n    background-color: #fff;\n    justify-content: center;\n    height: 50px;\n    font-size: 25px;\n\n    a {\n        font-family: 'Open Sans', sans-serif;\n        color: #000;\n        text-align: center;\n        font-weight: bold;\n        align-self: center;\n    }\n`;\n\n\nconst Header = ( { title } ) => {\n    return ( \n        <Nav>\n            <a href=\"#!\">{title}</a>\n        </Nav>\n     );\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n \nexport default Header;","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\n\nconst ErrorComponent = styled.p` \n    background-color: red;\n    color: #fff;\n    text-align: center;\n    margin: 10px -15px;\n    padding: 10px;\n    border-radius: 5px;\n    width: 100%;\n`\n\nconst Error = ( {messagge} ) => (\n    <ErrorComponent>{messagge}</ErrorComponent>\n)\n \nError.propTypes = {\n    messagge: PropTypes.string.isRequired\n}\n\nexport default Error;","import React, { useState } from 'react';\nimport Error from './Error';\nimport PropTypes from 'prop-types';\n\nconst Form =  ( {search, saveSearch, updateConsult} ) => {\n\n    // State for form validation error\n    const [ error, saveError ] = useState(false);\n\n    const { city, country } = search;\n    \n    const handleChange = e => {\n        saveSearch({\n            ...search,\n            [e.target.name] : e.target.value\n        });\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        // Validate\n        if(city.trim() === '' || country.trim() === ''){\n            saveError(true);\n            return;\n        };\n\n        saveError(false);\n\n        // Submit has been clicked\n        updateConsult(true);\n    };\n\n\n\n    return ( \n\n        <form\n            onSubmit={handleSubmit}\n        >\n            {error ? <Error messagge=\"All fields are mandatory\" /> : null}\n            <div className=\"form-group row\">\n                <label className=\"col-sm-3 col-form-label\" htmlFor=\"city\">City</label>\n                <input \n                    className=\"form-control col-sm-9\"\n                    name=\"city\"\n                    id=\"city\"\n                    placeholder=\"City\"\n                    value={city}\n                    onChange={handleChange}\n                />\n            </div>\n\n            <div className=\"form-group row\">\n                <label className=\"col-sm-3 col-form-label\">Country</label>\n                <select \n                    className=\"form-control col-sm-9\"\n                    name=\"country\"\n                    value={country}\n                    onChange={handleChange}\n                >\n                    <option value=\"\">-- Seleccione un país --</option>\n                    <option value=\"US\">Estados Unidos</option>\n                    <option value=\"MX\">México</option>\n                    <option value=\"AR\">Argentina</option>\n                    <option value=\"CO\">Colombia</option>\n                    <option value=\"CR\">Costa Rica</option>\n                    <option value=\"ES\">España</option>\n                    <option value=\"PE\">Perú</option>\n                </select>\n            </div>\n\n            <div className=\"row\">\n                <button\n                    className=\"btn btn-warning btn-block mt-4\"\n                    type=\"submit\"\n                >Submit</button>\n            </div>\n        </form>\n     );\n}\n\nForm.propTypes = {\n    search: PropTypes.object.isRequired,\n    saveSearch: PropTypes.func.isRequired,\n    updateConsult: PropTypes.func.isRequired\n}\n \nexport default Form;","import React from 'react';\nimport styled from '@emotion/styled';\nimport Error from './Error';\nimport PropTypes from 'prop-types';\n\nconst WeatherContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    div {\n        width: 100%;\n        height: 100%;\n        background-color: #fff;\n        display:flex;\n        flex-direction: column;\n        align-items: center;\n        border-radius: 5px;\n    }\n\n    h2 {\n        font-size: 1.5rem;\n    }\n\n    p:first-of-type {\n        font-size: 2rem;\n    }\n\n    @media (max-width: 768px) {\n        margin: 25px -15px;\n    }\n\n`\n\n\nconst Weather = ( {result} ) => {\n\n    const { cod, name, main } = result;\n\n    // temp is returned in kelvin\n    const kelvin = 273.15;\n\n    if(cod === \"404\") {\n        return(\n            <WeatherContainer>\n                <Error messagge=\"There was an error\" />\n            </WeatherContainer>\n        );\n    } else if ( !name) {\n        return null;\n    }\n\n    return ( \n        <WeatherContainer>\n            <div>\n                <h2>The weather from {name} is: </h2>\n                <p>\n                    { parseFloat(main.temp - kelvin, 10).toFixed(2) } &#x2103;\n                </p>\n                <p> <span>Maximum temperature: </span>  \n                    { parseFloat(main.temp_max - kelvin, 10).toFixed(2) } &#x2103;\n                </p>\n                <p> <span>Minimum temperature: </span>   \n                    { parseFloat(main.temp_min - kelvin, 10).toFixed(2) } &#x2103;\n                </p>\n            </div>\n        </WeatherContainer>\n     );\n}\n\nWeather.propTypes = {\n    result: PropTypes.object.isRequired,\n}\n \nexport default Weather;","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\n\n\nfunction App() {\n\n  // Helps keep track of user input\n  const [ search, saveSearch ] = useState({\n    city: \"\",\n    country: \"\"\n  });\n\n  // Helps keep track if the user has submit the request\n  const [ consult, updateConsult ] = useState(false);\n\n  // Save the result of the API\n  const [ result, saveResult ] = useState({});\n\n  const { city, country } = search;\n\n  useEffect( () => {\n    const consultAPI = async () => {\n\n      if(consult) {\n        const appId = '031060562914963cedcb8bd4d33826ed';\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${appId}`\n      \n        const response = await fetch(url);\n        const result = await response.json();\n  \n        saveResult(result);\n\n        updateConsult(false);\n\n      }\n    }\n    consultAPI();\n\n  }, [ consult ])\n\n\n  return (\n    <>\n      <Header\n        title=\"Weather App\"\n      />\n      <div className=\"main-content\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <Form \n                search={search}\n                saveSearch={saveSearch}\n                updateConsult={updateConsult}\n              />\n            </div>\n            <div className=\"col-md-6\">\n              <Weather result={result} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}